name: Build Master

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test in python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      COVERAGE_PYTHON_VERSION: 3.7
      COVERAGE_OS: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade virtualenv tox tox-gh-actions
    - name: "Run tox targets for ${{ matrix.python-version }}"
      run: "python -m tox"
    - name: "Generate coverage report"
      if: env.COVERAGE_PYTHON_VERSION == matrix.python-version && env.COVERAGE_OS == matrix.os
      run: |
        python -m pip install --upgrade coverage
        python -m coverage xml
    - name: "Upload coverage to Codecov"
      if: env.COVERAGE_PYTHON_VERSION == matrix.python-version && env.COVERAGE_OS == matrix.os
      uses: "codecov/codecov-action@v1"
      with:
        fail_ci_if_error: true

  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
    - name: Build Package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
